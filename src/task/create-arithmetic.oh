#!/usr/bin/env oh

define common: import: ... bin/common.oh

dynamic $stdout: open w: "/"::join $origin arithmetic.go

common::introduction @`(basename $0) $GOPACKAGE

echo 'import . "github.com/michaelmacinnis/oh/src/cell"'
echo
echo "func bind_arithmetic(s *Scope) {"

define t: quote: (add Add) (sub Subtract) (div Divide) \
                 (mod Modulo) (mul Multiply)

for t: method (l) as {
	define n: car l
	define m: cadr l
	printf "\ts.DefineMethod(\"%s\", func(t *Task, args Cell) bool {" n
	printf "\t\tacc := Car(args).(Number)\n"
	printf "\t\tfor Cdr(args) != Null {"
	printf "\t\t\targs = Cdr(args)"
	printf "\t\t\tacc = acc.%s(Car(args))" m
	printf "\t\t}\n"
	printf "\t\treturn t.Return(acc)"
	printf "\t})"
}

echo "}"

