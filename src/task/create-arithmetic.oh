#!/usr/bin/env oh

define common: import: ... bin/common.oh
define t: quote: (add Add) (sub Subtract) (div Divide) \
                 (mod Modulo) (mul Multiply)

dynamic $stdout: open w: "/"::join $origin arithmetic.go

common::introduction @`(basename $0) $GOPACKAGE

echo 'import . "github.com/michaelmacinnis/oh/src/cell"'
echo
echo "func bind_arithmetic(s *Scope) {"

for t: method (l) as {
	define n: car l
	define m: cadr l

	echo: interpolate "
	s.DefineMethod(\"${n}\", func(t *Task, args Cell) bool {
		acc := Car(args).(Number)

		for Cdr(args) != Null {
			args = Cdr(args)
			acc = acc.${m}(Car(args))
		}

		return t.Return(acc)
	})"
}

echo "}"

