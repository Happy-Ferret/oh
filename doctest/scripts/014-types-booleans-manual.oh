#!/usr/bin/env oh

# KEYWORD: manual
# PROVIDE: booleans
# REQUIRE: floats

## ## Booleans
##
## Oh has a boolean type and the boolean values `true` and `false`.
## The `boolean` command can be used to create a boolean value. Passing
## `boolean` a non-zero number, any string (including the empty string),
## and any symbol with the exception of the symbol `false` will result
## in a value of `true`.
##
## The command,
##
#{
write: boolean 0
#}
##
## produces the output,
##
#+     false
##
## Oh provides short-circuit `and` and `or` commands as well as `not`.
##
## The commands below,
##
#{
echo "short-circuit and =>": and false (echo this will never be evaluated)
echo "short-circuit or =>": or true (echo this will never be evaluated)
echo "boolean not =>": not false
#}
##
## produce the output,
##
#+     short-circuit and => false
#+     short-circuit or => true
#+     boolean not => true
##
## Oh also has relational operators:
##
#{
echo "3 is equal to 2 =>": eq 3 2
echo "3 is greater than or equal to 2 =>": ge 3 2
echo "3 is greater than 2 =>": ge 3 2
echo "3 is less than or equal to 2 =>": le 3 2
echo "3 is less than 2 =>": lt 3 2
echo "3 is not equal to 2 =>": ne 3 2
#}
##

#-     3 is equal to 2 => false
#-     3 is greater than 2 => true
#-     3 is greater than or equal to 2 => true
#-     3 is less than 2 => false
#-     3 is less than or equal to 2 => false
#-     3 is not equal to 2 => true

define x: boolean ""
define predicates '(is-atom is-boolean is-builtin is-channel is-cons \
                    is-float is-integer is-method is-null is-number \
                    is-object is-pipe is-status is-string is-symbol is-syntax)
for predicates: method (name) as {
    define predicate: eval name
    write name: "x => %v"::sprintf: predicate x
}

#-     is-atom "x => true"
#-     is-boolean "x => true"
#-     is-builtin "x => false"
#-     is-channel "x => false"
#-     is-cons "x => false"
#-     is-float "x => false"
#-     is-integer "x => false"
#-     is-method "x => false"
#-     is-null "x => false"
#-     is-number "x => false"
#-     is-object "x => false"
#-     is-pipe "x => false"
#-     is-status "x => false"
#-     is-string "x => false"
#-     is-symbol "x => false"
#-     is-syntax "x => false"

