#!/usr/bin/env oh

define strict True

Root::public read-car: method self () as: car: self::read

define counter: method (n) as {
    while True {
        write: set n: add n 1
    }
}

define filter: method (base) as {
    while True {
	define n: read-car
        if (mod n base): write n
    }
}

define prime-numbers: channel

counter 2 |+ block {
    define in $stdin

    while True {
        define prime: in::read-car
        write prime

        define out: channel
        spawn: filter prime <in >out

        set in out
    }
} > prime-numbers &

define count 1000
printf "The first %d prime numbers" count

define line ""
while count {
    define p: read-car
    set line: Text::join "" line: Text::sprintf "%7d" p
    set count: sub count 1
    if (not: mod count 10) {
        echo line
	set line ""
    }
} <prime-numbers

